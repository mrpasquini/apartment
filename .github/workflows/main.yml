name: Ruby
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types: [published]

jobs:
  rubocop:
    name: runner / rubocop
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rails_version:
#          - 6_1
          - 7_0
#          - 7_1
#          - master
    steps:
      - uses: actions/checkout@v4
      - name: Read .ruby-version file
        id: getrubyversion
        run: echo "RUBY_VERSION=$(cat .ruby-version)" >> $GITHUB_OUTPUT
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.getrubyversion.outputs.RUBY_VERSION }}
      - run: ls -la
      - name: Set up Rails ${{ matrix.rails_version }}
        run: |
          bundle config set --local gemfile "gemfiles/rails_${{ matrix.rails_version }}.gemfile"
          bundle config set --local path 'vendor/bundle'
          bundle install
      - name: Rubocop
        run: "bundle exec rubocop"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby_version:
          - 3.1
          - 3.2
        rails_version:
          - 6_1
          - 7_0
          - 7_1
#          - master
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: apartment_postgresql_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      mysql:
        # Docker Hub image
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: apartment_mysql_test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 3306 on service container to the host
          - 3306:3306
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
      - name: Set up Rails ${{ matrix.rails_version }}
        run: |
          bundle config set --local gemfile "gemfiles/rails_${{ matrix.rails_version }}.gemfile"
          bundle config set --local path 'vendor/bundle'
          bundle install
      - name: Configure config database.yml
        run: bundle exec rake db:copy_credentials
      - name: Database Setup
        run: bundle exec rake db:test:prepare
      - name: Run tests
        run: bundle exec rspec --format progress --format RspecJunitFormatter -o ~/test-results/rspec/rspec.xml
#      - store_test_results:
#          path: ~/test-results/rspec/